<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="kwsys4-HP-250-G8-Notebook-PC" failures="0" tests="14" name="Test" time="1.233" errors="0" timestamp="15 Mar 2024 09:16:15 GMT">
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="1.047">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: session not created: Chrome failed to start: exited normally.
  (session not created: DevToolsActivePort file doesn&amp;apos;t exist)
  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) 
Host info: host: &amp;apos;kwsys4-HP-250-G8-Notebook-PC&amp;apos;, ip: &amp;apos;127.0.1.1&amp;apos;
Build info: version: &amp;apos;4.10.0&amp;apos;, revision: &amp;apos;c14d967899&amp;apos;
System info: os.name: &amp;apos;Linux&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.2.0-36-generic&amp;apos;, java.version: &amp;apos;11.0.20.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*, --disable-dev-shm-usage, --ignore-ssl-errors=yes, --ignore-certificate-errors, --start-maximized], extensions: []}}]}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: Chrome failed to start: exited normally.
  (session not created: DevToolsActivePort file doesn't exist)
  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) 
Host info: host: 'kwsys4-HP-250-G8-Notebook-PC', ip: '127.0.1.1'
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-36-generic', java.version: '11.0.20.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*, --disable-dev-shm-usage, --ignore-ssl-errors=yes, --ignore-certificate-errors, --start-maximized], extensions: []}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:227)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:154)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:107)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:87)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:82)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:71)
at serien.TestComponents.BaseTest.initializeDriver(BaseTest.java:70)
at serien.TestComponents.BaseTest.launchApplication(BaseTest.java:123)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="serien.TestComponents.BaseTest" name="@BeforeMethod launchApplication" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod launchApplication -->
  <testcase classname="serien.TestComponents.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidateInEmailAndPasswordInvalideCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- ValidateInEmailAndPasswordInvalideCredentials -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="vaildeCredentional" time="0.0">
    <skipped/>
  </testcase> <!-- vaildeCredentional -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="InvalidespaceEmail" time="0.0">
    <skipped/>
  </testcase> <!-- InvalidespaceEmail -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidateEmailFieldByEnteringCapitalLaters" time="0.0">
    <skipped/>
  </testcase> <!-- ValidateEmailFieldByEnteringCapitalLaters -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidateloginWithInvalidEmailCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- ValidateloginWithInvalidEmailCredentials -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidateLoginWithInvalidPasswordCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- ValidateLoginWithInvalidPasswordCredentials -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidateEmailFieldWithoutAddingAnyDataIntoInEmailTextFiled" time="0.0">
    <skipped/>
  </testcase> <!-- ValidateEmailFieldWithoutAddingAnyDataIntoInEmailTextFiled -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidatePasswordFieldWithoutEnteringThePasswordInThePasswordField" time="0.0">
    <skipped/>
  </testcase> <!-- ValidatePasswordFieldWithoutEnteringThePasswordInThePasswordField -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidatingLoginWithBrowserBack" time="0.0">
    <skipped/>
  </testcase> <!-- ValidatingLoginWithBrowserBack -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidatingThePageTitleAndURL" time="0.0">
    <skipped/>
  </testcase> <!-- ValidatingThePageTitleAndURL -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="NavigationToForgetPasswordPage" time="0.0">
    <skipped/>
  </testcase> <!-- NavigationToForgetPasswordPage -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidationOfErrorMessageInForgetPasswordPage" time="0.0">
    <skipped/>
  </testcase> <!-- ValidationOfErrorMessageInForgetPasswordPage -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidationOfErrorMessageInvalidEmailInForgetPasswordPage" time="0.0">
    <skipped/>
  </testcase> <!-- ValidationOfErrorMessageInvalidEmailInForgetPasswordPage -->
  <testcase classname="Serien.SerienLive.LoginPageTest" name="ValidationOfSetPasswordLinkSendSucessfully" time="0.0">
    <skipped/>
  </testcase> <!-- ValidationOfSetPasswordLinkSendSucessfully -->
</testsuite> <!-- Test -->
