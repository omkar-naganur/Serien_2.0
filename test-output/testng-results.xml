<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="11" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-15T08:55:38Z" name="Suite" finished-at="2024-03-15T08:57:06Z" duration-ms="88365">
    <groups>
    </groups>
    <test started-at="2024-03-15T08:55:38Z" name="Test" finished-at="2024-03-15T08:57:06Z" duration-ms="88365">
      <class name="Serien.SerienLive.LoginPageTest">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:55:38Z" name="lunchApplication" finished-at="2024-03-15T08:55:42Z" duration-ms="3656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidateInEmailAndPasswordInvalideCredentials(java.util.HashMap)[pri:1, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:55:42Z" name="ValidateInEmailAndPasswordInvalideCredentials" data-provider="getdata" finished-at="2024-03-15T08:55:44Z" duration-ms="2875" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{InvalideCredentionalErrorMessages=Enter valid Credentials, err=Inavlid Email, pass=123456, //////////=/////////////////dfgdfgndfgg, PageTitle=Serein's Inc – Culture and Compliance, capitalEmail=OMKAR@Krishworks.CoM, noDataInEmial=, LoginURL=https://sereindevweb.kdev.co.in/, invalidePass=abcd, valideEmail=omkar@krishworks.com, noDataInPass=, ValidePass=password, extraSpaceEmail=  omkar@krishworks.com  , invalideEmail=rockey@gmail.com, email=om1@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateInEmailAndPasswordInvalideCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:55:44Z" name="tearDown" finished-at="2024-03-15T08:55:44Z" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:55:44Z" name="lunchApplication" finished-at="2024-03-15T08:55:47Z" duration-ms="2292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="vaildeCredentional(java.util.HashMap)[pri:2, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:55:47Z" name="vaildeCredentional" data-provider="getdata" finished-at="2024-03-15T08:55:52Z" duration-ms="5371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{InvalideCredentionalErrorMessages=Enter valid Credentials, err=Inavlid Email, pass=123456, //////////=/////////////////dfgdfgndfgg, PageTitle=Serein's Inc – Culture and Compliance, capitalEmail=OMKAR@Krishworks.CoM, noDataInEmial=, LoginURL=https://sereindevweb.kdev.co.in/, invalidePass=abcd, valideEmail=omkar@krishworks.com, noDataInPass=, ValidePass=password, extraSpaceEmail=  omkar@krishworks.com  , invalideEmail=rockey@gmail.com, email=om1@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vaildeCredentional -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:55:52Z" name="tearDown" finished-at="2024-03-15T08:55:52Z" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:55:52Z" name="lunchApplication" finished-at="2024-03-15T08:55:54Z" duration-ms="2125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="InvalidespaceEmail(java.util.HashMap)[pri:3, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:55:54Z" name="InvalidespaceEmail" data-provider="getdata" finished-at="2024-03-15T08:55:59Z" duration-ms="4476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{InvalideCredentionalErrorMessages=Enter valid Credentials, err=Inavlid Email, pass=123456, //////////=/////////////////dfgdfgndfgg, PageTitle=Serein's Inc – Culture and Compliance, capitalEmail=OMKAR@Krishworks.CoM, noDataInEmial=, LoginURL=https://sereindevweb.kdev.co.in/, invalidePass=abcd, valideEmail=omkar@krishworks.com, noDataInPass=, ValidePass=password, extraSpaceEmail=  omkar@krishworks.com  , invalideEmail=rockey@gmail.com, email=om1@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidespaceEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:55:59Z" name="tearDown" finished-at="2024-03-15T08:55:59Z" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:55:59Z" name="lunchApplication" finished-at="2024-03-15T08:56:01Z" duration-ms="1826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidateEmailFieldByEnteringCapitalLaters(java.util.HashMap)[pri:4, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:01Z" name="ValidateEmailFieldByEnteringCapitalLaters" data-provider="getdata" finished-at="2024-03-15T08:56:05Z" duration-ms="4562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{InvalideCredentionalErrorMessages=Enter valid Credentials, err=Inavlid Email, pass=123456, //////////=/////////////////dfgdfgndfgg, PageTitle=Serein's Inc – Culture and Compliance, capitalEmail=OMKAR@Krishworks.CoM, noDataInEmial=, LoginURL=https://sereindevweb.kdev.co.in/, invalidePass=abcd, valideEmail=omkar@krishworks.com, noDataInPass=, ValidePass=password, extraSpaceEmail=  omkar@krishworks.com  , invalideEmail=rockey@gmail.com, email=om1@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateEmailFieldByEnteringCapitalLaters -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:05Z" name="tearDown" finished-at="2024-03-15T08:56:05Z" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:05Z" name="lunchApplication" finished-at="2024-03-15T08:56:07Z" duration-ms="1838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidateloginWithInvalidEmailCredentials(java.util.HashMap)[pri:5, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:07Z" name="ValidateloginWithInvalidEmailCredentials" data-provider="getdata" finished-at="2024-03-15T08:56:10Z" duration-ms="2961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{InvalideCredentionalErrorMessages=Enter valid Credentials, err=Inavlid Email, pass=123456, //////////=/////////////////dfgdfgndfgg, PageTitle=Serein's Inc – Culture and Compliance, capitalEmail=OMKAR@Krishworks.CoM, noDataInEmial=, LoginURL=https://sereindevweb.kdev.co.in/, invalidePass=abcd, valideEmail=omkar@krishworks.com, noDataInPass=, ValidePass=password, extraSpaceEmail=  omkar@krishworks.com  , invalideEmail=rockey@gmail.com, email=om1@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateloginWithInvalidEmailCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:10Z" name="tearDown" finished-at="2024-03-15T08:56:10Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:10Z" name="lunchApplication" finished-at="2024-03-15T08:56:13Z" duration-ms="2353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidateLoginWithInvalidPasswordCredentials(java.util.HashMap)[pri:6, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:13Z" name="ValidateLoginWithInvalidPasswordCredentials" data-provider="getdata" finished-at="2024-03-15T08:56:16Z" duration-ms="2976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{InvalideCredentionalErrorMessages=Enter valid Credentials, err=Inavlid Email, pass=123456, //////////=/////////////////dfgdfgndfgg, PageTitle=Serein's Inc – Culture and Compliance, capitalEmail=OMKAR@Krishworks.CoM, noDataInEmial=, LoginURL=https://sereindevweb.kdev.co.in/, invalidePass=abcd, valideEmail=omkar@krishworks.com, noDataInPass=, ValidePass=password, extraSpaceEmail=  omkar@krishworks.com  , invalideEmail=rockey@gmail.com, email=om1@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateLoginWithInvalidPasswordCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:16Z" name="tearDown" finished-at="2024-03-15T08:56:16Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:16Z" name="lunchApplication" finished-at="2024-03-15T08:56:18Z" duration-ms="1866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidateEmailFieldWithoutAddingAnyDataIntoInEmailTextFiled(java.util.HashMap)[pri:7, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:18Z" name="ValidateEmailFieldWithoutAddingAnyDataIntoInEmailTextFiled" data-provider="getdata" finished-at="2024-03-15T08:56:25Z" duration-ms="7472" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{InvalideCredentionalErrorMessages=Enter valid Credentials, err=Inavlid Email, pass=123456, //////////=/////////////////dfgdfgndfgg, PageTitle=Serein's Inc – Culture and Compliance, capitalEmail=OMKAR@Krishworks.CoM, noDataInEmial=, LoginURL=https://sereindevweb.kdev.co.in/, invalidePass=abcd, valideEmail=omkar@krishworks.com, noDataInPass=, ValidePass=password, extraSpaceEmail=  omkar@krishworks.com  , invalideEmail=rockey@gmail.com, email=om1@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on linux (3a39621638bccc3cbfa85cc1bf809d49)] -> xpath: //div/span[1]] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-36-generic', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 119.0.6045.105, chrome: {chromedriverVersion: 119.0.6045.105 (38c72552c5e..., userDataDir: /tmp/.org.chromium.Chromium...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:44793}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://localhost:44793/devtoo..., se:cdpVersion: 119.0.6045.105, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3a39621638bccc3cbfa85cc1bf809d49]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on linux (3a39621638bccc3cbfa85cc1bf809d49)] -> xpath: //div/span[1]] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-36-generic', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 119.0.6045.105, chrome: {chromedriverVersion: 119.0.6045.105 (38c72552c5e..., userDataDir: /tmp/.org.chromium.Chromium...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:44793}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://localhost:44793/devtoo..., se:cdpVersion: 119.0.6045.105, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3a39621638bccc3cbfa85cc1bf809d49
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at Serien.AbstractComponents.abstractReusable.waitForWebElementTOApper(abstractReusable.java:40)
at Serien.SerienLive.LoginPage.ErrorMessage(LoginPage.java:83)
at Serien.SerienLive.LoginPageTest.ValidateEmailFieldWithoutAddingAnyDataIntoInEmailTextFiled(LoginPageTest.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateEmailFieldWithoutAddingAnyDataIntoInEmailTextFiled -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:25Z" name="tearDown" finished-at="2024-03-15T08:56:25Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:25Z" name="lunchApplication" finished-at="2024-03-15T08:56:28Z" duration-ms="2384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidatePasswordFieldWithoutEnteringThePasswordInThePasswordField(java.util.HashMap)[pri:8, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:28Z" name="ValidatePasswordFieldWithoutEnteringThePasswordInThePasswordField" data-provider="getdata" finished-at="2024-03-15T08:56:35Z" duration-ms="7532" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{InvalideCredentionalErrorMessages=Enter valid Credentials, err=Inavlid Email, pass=123456, //////////=/////////////////dfgdfgndfgg, PageTitle=Serein's Inc – Culture and Compliance, capitalEmail=OMKAR@Krishworks.CoM, noDataInEmial=, LoginURL=https://sereindevweb.kdev.co.in/, invalidePass=abcd, valideEmail=omkar@krishworks.com, noDataInPass=, ValidePass=password, extraSpaceEmail=  omkar@krishworks.com  , invalideEmail=rockey@gmail.com, email=om1@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on linux (d42ac9d700cfc1c7319bea5a0f38184c)] -> xpath: //div/span[1]] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-36-generic', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 119.0.6045.105, chrome: {chromedriverVersion: 119.0.6045.105 (38c72552c5e..., userDataDir: /tmp/.org.chromium.Chromium...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:36223}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://localhost:36223/devtoo..., se:cdpVersion: 119.0.6045.105, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d42ac9d700cfc1c7319bea5a0f38184c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on linux (d42ac9d700cfc1c7319bea5a0f38184c)] -> xpath: //div/span[1]] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '6.2.0-36-generic', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 119.0.6045.105, chrome: {chromedriverVersion: 119.0.6045.105 (38c72552c5e..., userDataDir: /tmp/.org.chromium.Chromium...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:36223}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: linux, proxy: Proxy(), se:cdp: ws://localhost:36223/devtoo..., se:cdpVersion: 119.0.6045.105, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d42ac9d700cfc1c7319bea5a0f38184c
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at Serien.AbstractComponents.abstractReusable.waitForWebElementTOApper(abstractReusable.java:40)
at Serien.SerienLive.LoginPage.ErrorMessage(LoginPage.java:83)
at Serien.SerienLive.LoginPageTest.ValidatePasswordFieldWithoutEnteringThePasswordInThePasswordField(LoginPageTest.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidatePasswordFieldWithoutEnteringThePasswordInThePasswordField -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:35Z" name="tearDown" finished-at="2024-03-15T08:56:36Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:36Z" name="lunchApplication" finished-at="2024-03-15T08:56:38Z" duration-ms="2371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidatingLoginWithBrowserBack(java.util.HashMap)[pri:9, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:38Z" name="ValidatingLoginWithBrowserBack" data-provider="getdata" finished-at="2024-03-15T08:56:45Z" duration-ms="6739" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{InvalideCredentionalErrorMessages=Enter valid Credentials, err=Inavlid Email, pass=123456, //////////=/////////////////dfgdfgndfgg, PageTitle=Serein's Inc – Culture and Compliance, capitalEmail=OMKAR@Krishworks.CoM, noDataInEmial=, LoginURL=https://sereindevweb.kdev.co.in/, invalidePass=abcd, valideEmail=omkar@krishworks.com, noDataInPass=, ValidePass=password, extraSpaceEmail=  omkar@krishworks.com  , invalideEmail=rockey@gmail.com, email=om1@gmail.com}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at Serien.SerienLive.LoginPageTest.ValidatingLoginWithBrowserBack(LoginPageTest.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidatingLoginWithBrowserBack -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:45Z" name="tearDown" finished-at="2024-03-15T08:56:45Z" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:45Z" name="lunchApplication" finished-at="2024-03-15T08:56:47Z" duration-ms="2230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidatingThePageTitleAndURL(java.util.HashMap)[pri:10, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:47Z" name="ValidatingThePageTitleAndURL" data-provider="getdata" finished-at="2024-03-15T08:56:47Z" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{InvalideCredentionalErrorMessages=Enter valid Credentials, err=Inavlid Email, pass=123456, //////////=/////////////////dfgdfgndfgg, PageTitle=Serein's Inc – Culture and Compliance, capitalEmail=OMKAR@Krishworks.CoM, noDataInEmial=, LoginURL=https://sereindevweb.kdev.co.in/, invalidePass=abcd, valideEmail=omkar@krishworks.com, noDataInPass=, ValidePass=password, extraSpaceEmail=  omkar@krishworks.com  , invalideEmail=rockey@gmail.com, email=om1@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidatingThePageTitleAndURL -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:47Z" name="tearDown" finished-at="2024-03-15T08:56:47Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:47Z" name="lunchApplication" finished-at="2024-03-15T08:56:49Z" duration-ms="1781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="NavigationToForgetPasswordPage(java.util.HashMap)[pri:11, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:49Z" name="NavigationToForgetPasswordPage" data-provider="getdata2" finished-at="2024-03-15T08:56:51Z" duration-ms="2107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{fp URL=forgot password, err=Please enter your email, emailErr=Inavlid Email, Fp=Forgot password, sucessfullMsg=A password recovery link has been sent to your registered email id. Please check your spam folder if you do not see the email in your inbox., invalidEmail=Test@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavigationToForgetPasswordPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:51Z" name="tearDown" finished-at="2024-03-15T08:56:51Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:51Z" name="lunchApplication" finished-at="2024-03-15T08:56:53Z" duration-ms="2026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidationOfErrorMessageInForgetPasswordPage(java.util.HashMap)[pri:12, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:53Z" name="ValidationOfErrorMessageInForgetPasswordPage" data-provider="getdata2" finished-at="2024-03-15T08:56:56Z" duration-ms="2170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{fp URL=forgot password, err=Please enter your email, emailErr=Inavlid Email, Fp=Forgot password, sucessfullMsg=A password recovery link has been sent to your registered email id. Please check your spam folder if you do not see the email in your inbox., invalidEmail=Test@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidationOfErrorMessageInForgetPasswordPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:56Z" name="tearDown" finished-at="2024-03-15T08:56:56Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:56Z" name="lunchApplication" finished-at="2024-03-15T08:56:58Z" duration-ms="1925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidationOfErrorMessageInvalidEmailInForgetPasswordPage(java.util.HashMap)[pri:13, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:56:58Z" name="ValidationOfErrorMessageInvalidEmailInForgetPasswordPage" data-provider="getdata2" finished-at="2024-03-15T08:57:01Z" duration-ms="3238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{fp URL=forgot password, err=Please enter your email, emailErr=Inavlid Email, Fp=Forgot password, sucessfullMsg=A password recovery link has been sent to your registered email id. Please check your spam folder if you do not see the email in your inbox., invalidEmail=Test@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidationOfErrorMessageInvalidEmailInForgetPasswordPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:57:01Z" name="tearDown" finished-at="2024-03-15T08:57:01Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:57:01Z" name="lunchApplication" finished-at="2024-03-15T08:57:03Z" duration-ms="1907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="ValidationOfSetPasswordLinkSendSucessfully(java.util.HashMap)[pri:14, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:57:03Z" name="ValidationOfSetPasswordLinkSendSucessfully" data-provider="getdata2" finished-at="2024-03-15T08:57:06Z" depends-on-methods="Serien.SerienLive.LoginPageTest.vaildeCredentional" duration-ms="3201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{fp URL=forgot password, err=Please enter your email, emailErr=Inavlid Email, Fp=Forgot password, sucessfullMsg=A password recovery link has been sent to your registered email id. Please check your spam folder if you do not see the email in your inbox., invalidEmail=Test@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidationOfSetPasswordLinkSendSucessfully -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Serien.SerienLive.LoginPageTest@2bef51f2]" started-at="2024-03-15T08:57:06Z" name="tearDown" finished-at="2024-03-15T08:57:06Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Serien.SerienLive.LoginPageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
